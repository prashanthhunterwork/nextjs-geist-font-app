{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/login-form.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { toast } from 'sonner'\nimport { User } from '@/types/user'\n\ninterface LoginFormProps {\n  onLogin: (user: User) => void\n}\n\n// Initialize default users and save to localStorage if not exists\nconst initializeUsers = () => {\n  if (typeof window === 'undefined') return []\n  \n  const existingUsers = localStorage.getItem('users')\n  if (!existingUsers) {\n    const defaultUsers = [\n      { id: '1', email: 'admin@propcheck.com', password: '@Vikash123', name: 'System Administrator', role: 'admin' as const },\n      { id: '2', email: 'tech1@techavail.com', password: 'Tech123!', name: 'John Smith', role: 'technician' as const, city: 'New York' },\n      { id: '3', email: 'tech2@techavail.com', password: 'Tech123!', name: 'Sarah Johnson', role: 'technician' as const, city: 'Los Angeles' },\n      { id: '4', email: 'tech3@techavail.com', password: 'Tech123!', name: 'Mike Davis', role: 'technician' as const, city: 'Chicago' },\n    ]\n    localStorage.setItem('users', JSON.stringify(defaultUsers))\n    return defaultUsers\n  }\n  return JSON.parse(existingUsers)\n}\n\nexport function LoginForm({ onLogin }: LoginFormProps) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000))\n\n    const users = initializeUsers()\n    const user = users.find((u: any) => u.email === email && u.password === password)\n    \n    if (user) {\n      const { password: _, ...userWithoutPassword } = user\n      onLogin(userWithoutPassword)\n      toast.success('Login successful!')\n    } else {\n      toast.error('Invalid email or password')\n    }\n    \n    setLoading(false)\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold\">Technician Time Availability</CardTitle>\n          <CardDescription>\n            Sign in to manage your availability\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <form onSubmit={handleLogin} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n            \n            <Button type=\"submit\" className=\"w-full\" disabled={loading}>\n              {loading ? 'Signing in...' : 'Sign In'}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: React.ComponentProps<typeof DayPicker>) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row gap-2\",\n        month: \"flex flex-col gap-4\",\n        caption: \"flex justify-center pt-1 relative items-center w-full\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"flex items-center gap-1\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"size-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-x-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\n            : \"[&:has([aria-selected])]:rounded-md\"\n        ),\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"size-8 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_start:\n          \"day-range-start aria-selected:bg-primary aria-selected:text-primary-foreground\",\n        day_range_end:\n          \"day-range-end aria-selected:bg-primary aria-selected:text-primary-foreground\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"size-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"size-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AASA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACoC;IACvC,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACL,mKACA,MAAM,IAAI,KAAK,UACX,yKACA;YAEN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,iBACE;YACF,eACE;YACF,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;oBAAa,GAAG,KAAK;;;;;;YAE5D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;oBAAa,GAAG,KAAK;;;;;;QAE/D;QACC,GAAG,KAAK;;;;;;AAGf;KA/DS","debugId":null}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/technician-dashboard.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Badge } from '@/components/ui/badge'\nimport { Calendar } from '@/components/ui/calendar'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Switch } from '@/components/ui/switch'\nimport { Separator } from '@/components/ui/separator'\nimport { toast } from 'sonner'\nimport { User, Availability, TimeSlot } from '@/types/user'\n\ninterface TechnicianDashboardProps {\n  user: User\n  onLogout: () => void\n}\n\nexport function TechnicianDashboard({ user, onLogout }: TechnicianDashboardProps) {\n  const [availabilities, setAvailabilities] = useState<Availability[]>([])\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date())\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\n  const [startTime, setStartTime] = useState('')\n  const [endTime, setEndTime] = useState('')\n  const [isRecurring, setIsRecurring] = useState(false)\n  const [recurringDays, setRecurringDays] = useState<string[]>([])\n\n  const DAYS_OF_WEEK = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']\n\n  useEffect(() => {\n    // Load existing availabilities\n    const saved = localStorage.getItem(`availabilities_${user.id}`)\n    if (saved) {\n      setAvailabilities(JSON.parse(saved))\n    }\n  }, [user.id])\n\n  const saveAvailabilities = (newAvailabilities: Availability[]) => {\n    setAvailabilities(newAvailabilities)\n    localStorage.setItem(`availabilities_${user.id}`, JSON.stringify(newAvailabilities))\n  }\n\n  const handleAddAvailability = () => {\n    if (!selectedDate || !startTime || !endTime) {\n      toast.error('Please fill all required fields')\n      return\n    }\n\n    if (startTime >= endTime) {\n      toast.error('End time must be after start time')\n      return\n    }\n\n    const newTimeSlot: TimeSlot = {\n      id: Date.now().toString(),\n      start: startTime,\n      end: endTime\n    }\n\n    const dateString = selectedDate.toISOString().split('T')[0]\n    \n    const newAvailability: Availability = {\n      id: Date.now().toString(),\n      technicianId: user.id,\n      date: dateString,\n      timeSlots: [newTimeSlot],\n      isRecurring,\n      recurringDays: isRecurring ? recurringDays : undefined\n    }\n\n    // Check if availability already exists for this date\n    const existingIndex = availabilities.findIndex(\n      a => a.date === dateString && a.technicianId === user.id\n    )\n\n    let updatedAvailabilities\n    if (existingIndex >= 0) {\n      // Add to existing availability\n      updatedAvailabilities = [...availabilities]\n      updatedAvailabilities[existingIndex].timeSlots.push(newTimeSlot)\n    } else {\n      // Create new availability\n      updatedAvailabilities = [...availabilities, newAvailability]\n    }\n\n    saveAvailabilities(updatedAvailabilities)\n    toast.success('Availability added successfully!')\n    \n    // Reset form\n    setStartTime('')\n    setEndTime('')\n    setIsRecurring(false)\n    setRecurringDays([])\n    setIsDialogOpen(false)\n  }\n\n  const handleDeleteTimeSlot = (availabilityId: string, timeSlotId: string) => {\n    const updatedAvailabilities = availabilities.map(availability => {\n      if (availability.id === availabilityId) {\n        const updatedTimeSlots = availability.timeSlots.filter(slot => slot.id !== timeSlotId)\n        return { ...availability, timeSlots: updatedTimeSlots }\n      }\n      return availability\n    }).filter(availability => availability.timeSlots.length > 0)\n\n    saveAvailabilities(updatedAvailabilities)\n    toast.success('Time slot removed')\n  }\n\n  const toggleRecurringDay = (day: string) => {\n    setRecurringDays(prev => \n      prev.includes(day) \n        ? prev.filter(d => d !== day)\n        : [...prev, day]\n    )\n  }\n\n  const getTodaysAvailability = () => {\n    const today = new Date().toISOString().split('T')[0]\n    return availabilities.find(a => a.date === today && a.technicianId === user.id)\n  }\n\n  const getUpcomingAvailabilities = () => {\n    const today = new Date()\n    return availabilities\n      .filter(a => a.technicianId === user.id && new Date(a.date) >= today)\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n      .slice(0, 5)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Welcome, {user.name}</h1>\n              <p className=\"text-gray-600\">Technician Dashboard - {user.city}</p>\n            </div>\n            <Button variant=\"outline\" onClick={onLogout}>\n              Logout\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Left Column - Calendar and Add Availability */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Select Date</CardTitle>\n                <CardDescription>Choose a date to add your availability</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Calendar\n                  mode=\"single\"\n                  selected={selectedDate}\n                  onSelect={setSelectedDate}\n                  className=\"rounded-md border\"\n                  disabled={(date) => date < new Date(new Date().setHours(0, 0, 0, 0))}\n                />\n              </CardContent>\n            </Card>\n\n            <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n              <DialogTrigger asChild>\n                <Button className=\"w-full\" disabled={!selectedDate}>\n                  Add Availability\n                </Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>Add Time Availability</DialogTitle>\n                  <DialogDescription>\n                    Set your available time for {selectedDate?.toLocaleDateString()}\n                  </DialogDescription>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"start-time\">Start Time</Label>\n                      <Input\n                        id=\"start-time\"\n                        type=\"time\"\n                        value={startTime}\n                        onChange={(e) => setStartTime(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"end-time\">End Time</Label>\n                      <Input\n                        id=\"end-time\"\n                        type=\"time\"\n                        value={endTime}\n                        onChange={(e) => setEndTime(e.target.value)}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"recurring\"\n                      checked={isRecurring}\n                      onCheckedChange={setIsRecurring}\n                    />\n                    <Label htmlFor=\"recurring\">Make this recurring</Label>\n                  </div>\n\n                  {isRecurring && (\n                    <div className=\"space-y-2\">\n                      <Label>Recurring Days</Label>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {DAYS_OF_WEEK.map((day) => (\n                          <Button\n                            key={day}\n                            variant={recurringDays.includes(day) ? \"default\" : \"outline\"}\n                            size=\"sm\"\n                            onClick={() => toggleRecurringDay(day)}\n                          >\n                            {day.charAt(0).toUpperCase() + day.slice(1, 3)}\n                          </Button>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  <Button onClick={handleAddAvailability} className=\"w-full\">\n                    Add Availability\n                  </Button>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {/* Right Column - Current and Upcoming Availability */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Today's Availability */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Today's Availability</CardTitle>\n                <CardDescription>Your availability for today</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {getTodaysAvailability() ? (\n                  <div className=\"space-y-2\">\n                    {getTodaysAvailability()!.timeSlots.map((slot) => (\n                      <div key={slot.id} className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Badge variant=\"secondary\">Available</Badge>\n                          <span className=\"font-medium\">\n                            {slot.start} - {slot.end}\n                          </span>\n                        </div>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleDeleteTimeSlot(getTodaysAvailability()!.id, slot.id)}\n                        >\n                          Remove\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500 text-center py-4\">No availability set for today</p>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Upcoming Availability */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Upcoming Availability</CardTitle>\n                <CardDescription>Your scheduled availability</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {getUpcomingAvailabilities().length > 0 ? (\n                  <div className=\"space-y-4\">\n                    {getUpcomingAvailabilities().map((availability) => (\n                      <div key={availability.id} className=\"border rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <h4 className=\"font-medium\">\n                            {new Date(availability.date).toLocaleDateString('en-US', {\n                              weekday: 'long',\n                              year: 'numeric',\n                              month: 'long',\n                              day: 'numeric'\n                            })}\n                          </h4>\n                          {availability.isRecurring && (\n                            <Badge variant=\"outline\">Recurring</Badge>\n                          )}\n                        </div>\n                        <div className=\"space-y-2\">\n                          {availability.timeSlots.map((slot) => (\n                            <div key={slot.id} className=\"flex items-center justify-between p-2 bg-blue-50 rounded\">\n                              <span className=\"text-sm font-medium\">\n                                {slot.start} - {slot.end}\n                              </span>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                onClick={() => handleDeleteTimeSlot(availability.id, slot.id)}\n                              >\n                                Remove\n                              </Button>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500 text-center py-4\">No upcoming availability scheduled</p>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1599, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1848, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1986, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 2062, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/availability-calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Label } from '@/components/ui/label'\nimport { Calendar } from '@/components/ui/calendar'\nimport { User, Availability } from '@/types/user'\n\n// Get technicians from localStorage\nconst getTechnicians = () => {\n  if (typeof window === 'undefined') return []\n  const users = JSON.parse(localStorage.getItem('users') || '[]')\n  return users.filter((user: any) => user.role === 'technician')\n}\n\n// Initialize cities in localStorage\nconst initializeCities = () => {\n  if (typeof window === 'undefined') return []\n  const existingCities = localStorage.getItem('cities')\n  if (!existingCities) {\n    const defaultCities = [\n      'New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', \n      'San Antonio', 'San Diego', 'Dallas', 'San Jose'\n    ]\n    localStorage.setItem('cities', JSON.stringify(defaultCities))\n    return defaultCities\n  }\n  return JSON.parse(existingCities)\n}\n\nexport function AvailabilityCalendar() {\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date())\n  const [selectedCity, setSelectedCity] = useState<string>('all')\n  const [selectedTechnician, setSelectedTechnician] = useState<string>('all')\n  const [technicians, setTechnicians] = useState<User[]>([])\n  const [cities, setCities] = useState<string[]>([])\n  const [availabilities, setAvailabilities] = useState<Availability[]>([])\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  useEffect(() => {\n    if (!mounted) return\n    \n    const loadData = () => {\n      const loadedTechnicians = getTechnicians()\n      const loadedCities = initializeCities()\n      \n      setTechnicians(loadedTechnicians)\n      setCities(loadedCities)\n      \n      // Load all availabilities\n      const allAvails: Availability[] = []\n      loadedTechnicians.forEach((tech: any) => {\n        const saved = localStorage.getItem(`availabilities_${tech.id}`)\n        if (saved) {\n          const techAvails = JSON.parse(saved)\n          allAvails.push(...techAvails)\n        }\n      })\n      \n      setAvailabilities(allAvails)\n    }\n\n    loadData()\n    const interval = setInterval(loadData, 5000)\n    return () => clearInterval(interval)\n  }, [mounted])\n\n  const getTechnicianById = (id: string) => {\n    return technicians.find(t => t.id === id)\n  }\n\n  const getFilteredAvailabilities = () => {\n    if (!selectedDate) return []\n\n    const dateString = selectedDate.toISOString().split('T')[0]\n    let filtered = availabilities.filter(a => a.date === dateString)\n\n    if (selectedCity !== 'all') {\n      filtered = filtered.filter(avail => {\n        const tech = getTechnicianById(avail.technicianId)\n        return tech?.city === selectedCity\n      })\n    }\n\n    if (selectedTechnician !== 'all') {\n      filtered = filtered.filter(avail => avail.technicianId === selectedTechnician)\n    }\n\n    return filtered.sort((a, b) => {\n      const techA = getTechnicianById(a.technicianId)\n      const techB = getTechnicianById(b.technicianId)\n      return (techA?.name || '').localeCompare(techB?.name || '')\n    })\n  }\n\n  const getAvailableDates = () => {\n    const dates = new Set<string>()\n    availabilities.forEach(avail => {\n      dates.add(avail.date)\n    })\n    return Array.from(dates).map(date => new Date(date))\n  }\n\n  const getFilteredTechnicians = () => {\n    if (selectedCity === 'all') return technicians\n    return technicians.filter(t => t.city === selectedCity)\n  }\n\n  if (!mounted) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col lg:flex-row gap-6\">\n        {/* Left Side - Calendar and Filters */}\n        <div className=\"lg:w-1/3 space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Select Date</CardTitle>\n              <CardDescription>Choose a date to view availability</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Calendar\n                mode=\"single\"\n                selected={selectedDate}\n                onSelect={setSelectedDate}\n                className=\"rounded-md border\"\n                modifiers={{\n                  available: getAvailableDates(),\n                }}\n                modifiersStyles={{\n                  available: { \n                    backgroundColor: '#dcfce7',\n                    color: '#166534',\n                    fontWeight: 'bold'\n                  }\n                }}\n              />\n              <div className=\"mt-4 text-sm text-gray-600\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-3 h-3 bg-green-200 rounded\"></div>\n                  <span>Dates with availability</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Filters</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label>City</Label>\n                <Select value={selectedCity} onValueChange={setSelectedCity}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Cities</SelectItem>\n                    {cities.map((city) => (\n                      <SelectItem key={city} value={city}>\n                        {city}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label>Technician</Label>\n                <Select value={selectedTechnician} onValueChange={setSelectedTechnician}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Technicians</SelectItem>\n                    {getFilteredTechnicians().map((tech) => (\n                      <SelectItem key={tech.id} value={tech.id}>\n                        {tech.name}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Right Side - Availability Details */}\n        <div className=\"lg:w-2/3\">\n          <Card>\n            <CardHeader>\n              <CardTitle>\n                Availability for {selectedDate?.toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </CardTitle>\n              <CardDescription>\n                {getFilteredAvailabilities().length} technician(s) available\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {getFilteredAvailabilities().length > 0 ? (\n                <div className=\"space-y-4\">\n                  {getFilteredAvailabilities().map((availability) => {\n                    const technician = getTechnicianById(availability.technicianId)\n                    return (\n                      <div key={availability.id} className=\"border rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <div>\n                            <h4 className=\"font-semibold text-lg\">{technician?.name}</h4>\n                            <p className=\"text-sm text-gray-600\">{technician?.city}</p>\n                          </div>\n                          <div className=\"flex gap-2\">\n                            <Badge variant={availability.isRecurring ? \"default\" : \"outline\"}>\n                              {availability.isRecurring ? \"Recurring\" : \"One-time\"}\n                            </Badge>\n                          </div>\n                        </div>\n                        \n                        <div className=\"space-y-2\">\n                          <h5 className=\"font-medium text-sm text-gray-700\">Available Time Slots:</h5>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {availability.timeSlots.map((slot) => (\n                              <Badge key={slot.id} variant=\"secondary\" className=\"text-sm\">\n                                {slot.start} - {slot.end}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n\n                        {availability.isRecurring && availability.recurringDays && (\n                          <div className=\"mt-3\">\n                            <h5 className=\"font-medium text-sm text-gray-700 mb-2\">Recurring Days:</h5>\n                            <div className=\"flex flex-wrap gap-1\">\n                              {availability.recurringDays.map((day) => (\n                                <Badge key={day} variant=\"outline\" className=\"text-xs\">\n                                  {day.charAt(0).toUpperCase() + day.slice(1)}\n                                </Badge>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )\n                  })}\n                </div>\n              ) : (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <p className=\"text-lg mb-2\">No availability found</p>\n                  <p className=\"text-sm\">\n                    {selectedDate \n                      ? `No technicians are available on ${selectedDate.toLocaleDateString()}`\n                      : 'Please select a date to view availability'\n                    }\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Summary Statistics */}\n          <Card className=\"mt-6\">\n            <CardHeader>\n              <CardTitle>Daily Summary</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {getFilteredAvailabilities().length}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Available Technicians</div>\n                </div>\n                \n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {getFilteredAvailabilities().reduce((sum, a) => sum + a.timeSlots.length, 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Total Time Slots</div>\n                </div>\n                \n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {new Set(getFilteredAvailabilities().map(a => getTechnicianById(a.technicianId)?.city)).size}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Cities Covered</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2823, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/admin-dashboard.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { toast } from 'sonner'\nimport { User, Availability } from '@/types/user'\nimport { AvailabilityCalendar } from '@/components/availability-calendar'\n\ninterface AdminDashboardProps {\n  user: User\n  onLogout: () => void\n}\n\n// Initialize cities in localStorage\nconst initializeCities = () => {\n  if (typeof window === 'undefined') return []\n  const existingCities = localStorage.getItem('cities')\n  if (!existingCities) {\n    const defaultCities = [\n      'New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', \n      'San Antonio', 'San Diego', 'Dallas', 'San Jose'\n    ]\n    localStorage.setItem('cities', JSON.stringify(defaultCities))\n    return defaultCities\n  }\n  return JSON.parse(existingCities)\n}\n\n// Get technicians from localStorage\nconst getTechnicians = () => {\n  if (typeof window === 'undefined') return []\n  const users = JSON.parse(localStorage.getItem('users') || '[]')\n  return users.filter((user: any) => user.role === 'technician')\n}\n\nexport function AdminDashboard({ user, onLogout }: AdminDashboardProps) {\n  const [allAvailabilities, setAllAvailabilities] = useState<Availability[]>([])\n  const [technicians, setTechnicians] = useState<User[]>([])\n  const [cities, setCities] = useState<string[]>([])\n  const [selectedCity, setSelectedCity] = useState<string>('all')\n  const [selectedDate, setSelectedDate] = useState<string>('')\n  const [editingAvailability, setEditingAvailability] = useState<Availability | null>(null)\n  const [newStartTime, setNewStartTime] = useState('')\n  const [newEndTime, setNewEndTime] = useState('')\n  const [mounted, setMounted] = useState(false)\n  \n  // New technician form states\n  const [isAddingTechnician, setIsAddingTechnician] = useState(false)\n  const [newTechName, setNewTechName] = useState('')\n  const [newTechEmail, setNewTechEmail] = useState('')\n  const [newTechPassword, setNewTechPassword] = useState('')\n  const [newTechCity, setNewTechCity] = useState('')\n  \n  // New city form states\n  const [isAddingCity, setIsAddingCity] = useState(false)\n  const [newCityName, setNewCityName] = useState('')\n\n  useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  useEffect(() => {\n    if (!mounted) return\n    \n    // Initialize data\n    const loadData = () => {\n      const loadedTechnicians = getTechnicians()\n      const loadedCities = initializeCities()\n      \n      setTechnicians(loadedTechnicians)\n      setCities(loadedCities)\n      \n      // Load all availabilities from localStorage\n      const allAvails: Availability[] = []\n      \n      // Load availabilities for each technician\n      loadedTechnicians.forEach((tech: any) => {\n        const saved = localStorage.getItem(`availabilities_${tech.id}`)\n        if (saved) {\n          const techAvails = JSON.parse(saved)\n          allAvails.push(...techAvails)\n        }\n      })\n      \n      setAllAvailabilities(allAvails)\n    }\n\n    loadData()\n    \n    // Set up interval to refresh data\n    const interval = setInterval(loadData, 5000)\n    return () => clearInterval(interval)\n  }, [mounted])\n\n  const getTechnicianById = (id: string) => {\n    return technicians.find(t => t.id === id)\n  }\n\n  const getFilteredAvailabilities = () => {\n    let filtered = allAvailabilities\n\n    if (selectedCity !== 'all') {\n      filtered = filtered.filter(avail => {\n        const tech = getTechnicianById(avail.technicianId)\n        return tech?.city === selectedCity\n      })\n    }\n\n    if (selectedDate) {\n      filtered = filtered.filter(avail => avail.date === selectedDate)\n    }\n\n    return filtered.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n  }\n\n  const getAvailabilityStats = () => {\n    const today = new Date().toISOString().split('T')[0]\n    const todayAvails = allAvailabilities.filter(a => a.date === today)\n    \n    const cityStats = cities.map(city => {\n      const cityTechs = technicians.filter(t => t.city === city)\n      const cityAvails = todayAvails.filter(a => {\n        const tech = getTechnicianById(a.technicianId)\n        return tech?.city === city\n      })\n      \n      return {\n        city,\n        totalTechs: cityTechs.length,\n        availableToday: cityAvails.length,\n        totalSlots: cityAvails.reduce((sum, a) => sum + a.timeSlots.length, 0)\n      }\n    })\n\n    return cityStats\n  }\n\n  const handleAddTechnician = () => {\n    if (!newTechName || !newTechEmail || !newTechPassword || !newTechCity) {\n      toast.error('Please fill all fields')\n      return\n    }\n\n    const users = JSON.parse(localStorage.getItem('users') || '[]')\n    \n    // Check if email already exists\n    if (users.find((u: any) => u.email === newTechEmail)) {\n      toast.error('Email already exists')\n      return\n    }\n\n    const newTechnician = {\n      id: Date.now().toString(),\n      name: newTechName,\n      email: newTechEmail,\n      password: newTechPassword,\n      role: 'technician',\n      city: newTechCity\n    }\n\n    users.push(newTechnician)\n    localStorage.setItem('users', JSON.stringify(users))\n    \n    // Update local state\n    setTechnicians(getTechnicians())\n    \n    // Reset form\n    setNewTechName('')\n    setNewTechEmail('')\n    setNewTechPassword('')\n    setNewTechCity('')\n    setIsAddingTechnician(false)\n    \n    toast.success('Technician added successfully')\n  }\n\n  const handleAddCity = () => {\n    if (!newCityName.trim()) {\n      toast.error('Please enter a city name')\n      return\n    }\n\n    if (cities.includes(newCityName.trim())) {\n      toast.error('City already exists')\n      return\n    }\n\n    const updatedCities = [...cities, newCityName.trim()]\n    setCities(updatedCities)\n    localStorage.setItem('cities', JSON.stringify(updatedCities))\n    \n    setNewCityName('')\n    setIsAddingCity(false)\n    toast.success('City added successfully')\n  }\n\n  const handleDeleteTechnician = (techId: string) => {\n    const users = JSON.parse(localStorage.getItem('users') || '[]')\n    const updatedUsers = users.filter((u: any) => u.id !== techId)\n    localStorage.setItem('users', JSON.stringify(updatedUsers))\n    \n    // Also remove their availabilities\n    localStorage.removeItem(`availabilities_${techId}`)\n    \n    // Update local state\n    setTechnicians(getTechnicians())\n    setAllAvailabilities(prev => prev.filter(a => a.technicianId !== techId))\n    \n    toast.success('Technician removed successfully')\n  }\n\n  const handleDeleteCity = (cityName: string) => {\n    // Check if any technicians are assigned to this city\n    const techsInCity = technicians.filter(t => t.city === cityName)\n    if (techsInCity.length > 0) {\n      toast.error(`Cannot delete city. ${techsInCity.length} technician(s) are assigned to this city.`)\n      return\n    }\n\n    const updatedCities = cities.filter(c => c !== cityName)\n    setCities(updatedCities)\n    localStorage.setItem('cities', JSON.stringify(updatedCities))\n    \n    toast.success('City deleted successfully')\n  }\n\n  const handleEditAvailability = (availability: Availability) => {\n    setEditingAvailability(availability)\n    if (availability.timeSlots.length > 0) {\n      setNewStartTime(availability.timeSlots[0].start)\n      setNewEndTime(availability.timeSlots[0].end)\n    }\n  }\n\n  const handleUpdateAvailability = () => {\n    if (!editingAvailability || !newStartTime || !newEndTime) {\n      toast.error('Please fill all fields')\n      return\n    }\n\n    if (newStartTime >= newEndTime) {\n      toast.error('End time must be after start time')\n      return\n    }\n\n    // Update the availability in localStorage\n    const techId = editingAvailability.technicianId\n    const saved = localStorage.getItem(`availabilities_${techId}`)\n    \n    if (saved) {\n      const techAvails = JSON.parse(saved)\n      const updatedAvails = techAvails.map((avail: Availability) => {\n        if (avail.id === editingAvailability.id) {\n          return {\n            ...avail,\n            timeSlots: [{\n              ...avail.timeSlots[0],\n              start: newStartTime,\n              end: newEndTime\n            }]\n          }\n        }\n        return avail\n      })\n      \n      localStorage.setItem(`availabilities_${techId}`, JSON.stringify(updatedAvails))\n      \n      // Update local state\n      setAllAvailabilities(prev => prev.map(avail => \n        avail.id === editingAvailability.id \n          ? {\n              ...avail,\n              timeSlots: [{\n                ...avail.timeSlots[0],\n                start: newStartTime,\n                end: newEndTime\n              }]\n            }\n          : avail\n      ))\n      \n      toast.success('Availability updated successfully')\n      setEditingAvailability(null)\n      setNewStartTime('')\n      setNewEndTime('')\n    }\n  }\n\n  const handleDeleteAvailability = (availability: Availability) => {\n    const techId = availability.technicianId\n    const saved = localStorage.getItem(`availabilities_${techId}`)\n    \n    if (saved) {\n      const techAvails = JSON.parse(saved)\n      const updatedAvails = techAvails.filter((avail: Availability) => avail.id !== availability.id)\n      \n      localStorage.setItem(`availabilities_${techId}`, JSON.stringify(updatedAvails))\n      \n      // Update local state\n      setAllAvailabilities(prev => prev.filter(avail => avail.id !== availability.id))\n      \n      toast.success('Availability deleted successfully')\n    }\n  }\n\n  if (!mounted) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Admin Dashboard</h1>\n              <p className=\"text-gray-600\">Manage technician availability across all cities</p>\n            </div>\n            <Button variant=\"outline\" onClick={onLogout}>\n              Logout\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <Tabs defaultValue=\"overview\" className=\"space-y-6\">\n          <TabsList>\n            <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n            <TabsTrigger value=\"calendar\">Calendar View</TabsTrigger>\n            <TabsTrigger value=\"availability\">Manage Availability</TabsTrigger>\n            <TabsTrigger value=\"technicians\">Technicians</TabsTrigger>\n            <TabsTrigger value=\"cities\">Cities</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"overview\" className=\"space-y-6\">\n            {/* Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Total Technicians</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold\">{technicians.length}</div>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader>\n                  <CardTitle>Available Today</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold\">\n                    {allAvailabilities.filter(a => a.date === new Date().toISOString().split('T')[0]).length}\n                  </div>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader>\n                  <CardTitle>Total Cities</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold\">{cities.length}</div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* City Stats */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Today's Availability by City</CardTitle>\n                <CardDescription>Overview of technician availability across all cities</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {getAvailabilityStats().map((stat) => (\n                    <div key={stat.city} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                      <div>\n                        <h4 className=\"font-medium\">{stat.city}</h4>\n                        <p className=\"text-sm text-gray-600\">\n                          {stat.totalTechs} technicians total\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-2xl font-bold text-green-600\">{stat.availableToday}</div>\n                        <p className=\"text-sm text-gray-600\">available today</p>\n                        <p className=\"text-xs text-gray-500\">{stat.totalSlots} time slots</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"calendar\" className=\"space-y-6\">\n            <AvailabilityCalendar />\n          </TabsContent>\n\n          <TabsContent value=\"availability\" className=\"space-y-6\">\n            {/* Filters */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Filter Availability</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label>City</Label>\n                    <Select value={selectedCity} onValueChange={setSelectedCity}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Cities</SelectItem>\n                        {cities.map((city) => (\n                          <SelectItem key={city} value={city}>\n                            {city}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label>Date</Label>\n                    <Input\n                      type=\"date\"\n                      value={selectedDate}\n                      onChange={(e) => setSelectedDate(e.target.value)}\n                    />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Availability Table */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Technician Availability</CardTitle>\n                <CardDescription>\n                  {getFilteredAvailabilities().length} availability records found\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Technician</TableHead>\n                      <TableHead>City</TableHead>\n                      <TableHead>Date</TableHead>\n                      <TableHead>Time Slots</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {getFilteredAvailabilities().map((availability) => {\n                      const technician = getTechnicianById(availability.technicianId)\n                      return (\n                        <TableRow key={availability.id}>\n                          <TableCell className=\"font-medium\">\n                            {technician?.name || 'Unknown'}\n                          </TableCell>\n                          <TableCell>{technician?.city}</TableCell>\n                          <TableCell>\n                            {new Date(availability.date).toLocaleDateString()}\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"space-y-1\">\n                              {availability.timeSlots.map((slot) => (\n                                <Badge key={slot.id} variant=\"secondary\">\n                                  {slot.start} - {slot.end}\n                                </Badge>\n                              ))}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant={availability.isRecurring ? \"default\" : \"outline\"}>\n                              {availability.isRecurring ? \"Recurring\" : \"One-time\"}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex space-x-2\">\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleEditAvailability(availability)}\n                              >\n                                Edit\n                              </Button>\n                              <Button\n                                variant=\"destructive\"\n                                size=\"sm\"\n                                onClick={() => handleDeleteAvailability(availability)}\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      )\n                    })}\n                  </TableBody>\n                </Table>\n                \n                {getFilteredAvailabilities().length === 0 && (\n                  <div className=\"text-center py-8 text-gray-500\">\n                    No availability records found for the selected filters\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"technicians\" className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold\">Manage Technicians</h2>\n              <Dialog open={isAddingTechnician} onOpenChange={setIsAddingTechnician}>\n                <DialogTrigger asChild>\n                  <Button>Add New Technician</Button>\n                </DialogTrigger>\n                <DialogContent>\n                  <DialogHeader>\n                    <DialogTitle>Add New Technician</DialogTitle>\n                    <DialogDescription>\n                      Create a new technician account\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label>Full Name</Label>\n                      <Input\n                        value={newTechName}\n                        onChange={(e) => setNewTechName(e.target.value)}\n                        placeholder=\"Enter full name\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label>Email</Label>\n                      <Input\n                        type=\"email\"\n                        value={newTechEmail}\n                        onChange={(e) => setNewTechEmail(e.target.value)}\n                        placeholder=\"Enter email address\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label>Password</Label>\n                      <Input\n                        type=\"password\"\n                        value={newTechPassword}\n                        onChange={(e) => setNewTechPassword(e.target.value)}\n                        placeholder=\"Enter password\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label>City</Label>\n                      <Select value={newTechCity} onValueChange={setNewTechCity}>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select city\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {cities.map((city) => (\n                            <SelectItem key={city} value={city}>\n                              {city}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    <div className=\"flex space-x-2\">\n                      <Button onClick={handleAddTechnician} className=\"flex-1\">\n                        Add Technician\n                      </Button>\n                      <Button variant=\"outline\" onClick={() => setIsAddingTechnician(false)}>\n                        Cancel\n                      </Button>\n                    </div>\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Registered Technicians</CardTitle>\n                <CardDescription>Manage technician accounts and information</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Name</TableHead>\n                      <TableHead>Email</TableHead>\n                      <TableHead>City</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {technicians.map((tech) => (\n                      <TableRow key={tech.id}>\n                        <TableCell className=\"font-medium\">{tech.name}</TableCell>\n                        <TableCell>{tech.email}</TableCell>\n                        <TableCell>{tech.city}</TableCell>\n                        <TableCell>\n                          <Badge variant=\"secondary\">Active</Badge>\n                        </TableCell>\n                        <TableCell>\n                          <Button\n                            variant=\"destructive\"\n                            size=\"sm\"\n                            onClick={() => handleDeleteTechnician(tech.id)}\n                          >\n                            Remove\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"cities\" className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold\">Manage Cities</h2>\n              <Dialog open={isAddingCity} onOpenChange={setIsAddingCity}>\n                <DialogTrigger asChild>\n                  <Button>Add New City</Button>\n                </DialogTrigger>\n                <DialogContent>\n                  <DialogHeader>\n                    <DialogTitle>Add New City</DialogTitle>\n                    <DialogDescription>\n                      Add a new city for technician assignments\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label>City Name</Label>\n                      <Input\n                        value={newCityName}\n                        onChange={(e) => setNewCityName(e.target.value)}\n                        placeholder=\"Enter city name\"\n                      />\n                    </div>\n                    <div className=\"flex space-x-2\">\n                      <Button onClick={handleAddCity} className=\"flex-1\">\n                        Add City\n                      </Button>\n                      <Button variant=\"outline\" onClick={() => setIsAddingCity(false)}>\n                        Cancel\n                      </Button>\n                    </div>\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Available Cities</CardTitle>\n                <CardDescription>Manage cities where technicians can be assigned</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {cities.map((city) => {\n                    const techCount = technicians.filter(t => t.city === city).length\n                    return (\n                      <div key={city} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                        <div>\n                          <h4 className=\"font-medium\">{city}</h4>\n                          <p className=\"text-sm text-gray-600\">{techCount} technicians</p>\n                        </div>\n                        <Button\n                          variant=\"destructive\"\n                          size=\"sm\"\n                          onClick={() => handleDeleteCity(city)}\n                          disabled={techCount > 0}\n                        >\n                          Delete\n                        </Button>\n                      </div>\n                    )\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      {/* Edit Availability Dialog */}\n      <Dialog open={!!editingAvailability} onOpenChange={() => setEditingAvailability(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Edit Availability</DialogTitle>\n            <DialogDescription>\n              Modify the time slot for {getTechnicianById(editingAvailability?.technicianId || '')?.name}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"edit-start-time\">Start Time</Label>\n                <Input\n                  id=\"edit-start-time\"\n                  type=\"time\"\n                  value={newStartTime}\n                  onChange={(e) => setNewStartTime(e.target.value)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"edit-end-time\">End Time</Label>\n                <Input\n                  id=\"edit-end-time\"\n                  type=\"time\"\n                  value={newEndTime}\n                  onChange={(e) => setNewEndTime(e.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              <Button onClick={handleUpdateAvailability} className=\"flex-1\">\n                Update Availability\n              </Button>\n              <Button variant=\"outline\" onClick={() => setEditingAvailability(null)}>\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAdA;;;;;;;;;;;;;AAqBA,oCAAoC;AACpC,MAAM,mBAAmB;IACvB,uCAAmC;;IAAQ;IAC3C,MAAM,iBAAiB,aAAa,OAAO,CAAC;IAC5C,IAAI,CAAC,gBAAgB;QACnB,MAAM,gBAAgB;YACpB;YAAY;YAAe;YAAW;YAAW;YAAW;YAC5D;YAAe;YAAa;YAAU;SACvC;QACD,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;QAC9C,OAAO;IACT;IACA,OAAO,KAAK,KAAK,CAAC;AACpB;AAEA,oCAAoC;AACpC,MAAM,iBAAiB;IACrB,uCAAmC;;IAAQ;IAC3C,MAAM,QAAQ,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,YAAY;IAC1D,OAAO,MAAM,MAAM,CAAC,CAAC,OAAc,KAAK,IAAI,KAAK;AACnD;AAEO,SAAS,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAuB;;IACpE,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAC7E,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IACzD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IACpF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,6BAA6B;IAC7B,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,uBAAuB;IACvB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,WAAW;QACb;mCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,CAAC,SAAS;YAEd,kBAAkB;YAClB,MAAM;qDAAW;oBACf,MAAM,oBAAoB;oBAC1B,MAAM,eAAe;oBAErB,eAAe;oBACf,UAAU;oBAEV,4CAA4C;oBAC5C,MAAM,YAA4B,EAAE;oBAEpC,0CAA0C;oBAC1C,kBAAkB,OAAO;6DAAC,CAAC;4BACzB,MAAM,QAAQ,aAAa,OAAO,CAAC,CAAC,eAAe,EAAE,KAAK,EAAE,EAAE;4BAC9D,IAAI,OAAO;gCACT,MAAM,aAAa,KAAK,KAAK,CAAC;gCAC9B,UAAU,IAAI,IAAI;4BACpB;wBACF;;oBAEA,qBAAqB;gBACvB;;YAEA;YAEA,kCAAkC;YAClC,MAAM,WAAW,YAAY,UAAU;YACvC;4CAAO,IAAM,cAAc;;QAC7B;mCAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB,CAAC;QACzB,OAAO,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IACxC;IAEA,MAAM,4BAA4B;QAChC,IAAI,WAAW;QAEf,IAAI,iBAAiB,OAAO;YAC1B,WAAW,SAAS,MAAM,CAAC,CAAA;gBACzB,MAAM,OAAO,kBAAkB,MAAM,YAAY;gBACjD,OAAO,MAAM,SAAS;YACxB;QACF;QAEA,IAAI,cAAc;YAChB,WAAW,SAAS,MAAM,CAAC,CAAA,QAAS,MAAM,IAAI,KAAK;QACrD;QAEA,OAAO,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO;IACtF;IAEA,MAAM,uBAAuB;QAC3B,MAAM,QAAQ,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QACpD,MAAM,cAAc,kBAAkB,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;QAE7D,MAAM,YAAY,OAAO,GAAG,CAAC,CAAA;YAC3B,MAAM,YAAY,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;YACrD,MAAM,aAAa,YAAY,MAAM,CAAC,CAAA;gBACpC,MAAM,OAAO,kBAAkB,EAAE,YAAY;gBAC7C,OAAO,MAAM,SAAS;YACxB;YAEA,OAAO;gBACL;gBACA,YAAY,UAAU,MAAM;gBAC5B,gBAAgB,WAAW,MAAM;gBACjC,YAAY,WAAW,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE;YACtE;QACF;QAEA,OAAO;IACT;IAEA,MAAM,sBAAsB;QAC1B,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,aAAa;YACrE,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,MAAM,QAAQ,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,YAAY;QAE1D,gCAAgC;QAChC,IAAI,MAAM,IAAI,CAAC,CAAC,IAAW,EAAE,KAAK,KAAK,eAAe;YACpD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,MAAM,gBAAgB;YACpB,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,MAAM;YACN,OAAO;YACP,UAAU;YACV,MAAM;YACN,MAAM;QACR;QAEA,MAAM,IAAI,CAAC;QACX,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;QAE7C,qBAAqB;QACrB,eAAe;QAEf,aAAa;QACb,eAAe;QACf,gBAAgB;QAChB,mBAAmB;QACnB,eAAe;QACf,sBAAsB;QAEtB,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;IAChB;IAEA,MAAM,gBAAgB;QACpB,IAAI,CAAC,YAAY,IAAI,IAAI;YACvB,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,IAAI,OAAO,QAAQ,CAAC,YAAY,IAAI,KAAK;YACvC,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,MAAM,gBAAgB;eAAI;YAAQ,YAAY,IAAI;SAAG;QACrD,UAAU;QACV,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;QAE9C,eAAe;QACf,gBAAgB;QAChB,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;IAChB;IAEA,MAAM,yBAAyB,CAAC;QAC9B,MAAM,QAAQ,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,YAAY;QAC1D,MAAM,eAAe,MAAM,MAAM,CAAC,CAAC,IAAW,EAAE,EAAE,KAAK;QACvD,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;QAE7C,mCAAmC;QACnC,aAAa,UAAU,CAAC,CAAC,eAAe,EAAE,QAAQ;QAElD,qBAAqB;QACrB,eAAe;QACf,qBAAqB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,YAAY,KAAK;QAEjE,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;IAChB;IAEA,MAAM,mBAAmB,CAAC;QACxB,qDAAqD;QACrD,MAAM,cAAc,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;QACvD,IAAI,YAAY,MAAM,GAAG,GAAG;YAC1B,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,CAAC,oBAAoB,EAAE,YAAY,MAAM,CAAC,yCAAyC,CAAC;YAChG;QACF;QAEA,MAAM,gBAAgB,OAAO,MAAM,CAAC,CAAA,IAAK,MAAM;QAC/C,UAAU;QACV,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;QAE9C,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;IAChB;IAEA,MAAM,yBAAyB,CAAC;QAC9B,uBAAuB;QACvB,IAAI,aAAa,SAAS,CAAC,MAAM,GAAG,GAAG;YACrC,gBAAgB,aAAa,SAAS,CAAC,EAAE,CAAC,KAAK;YAC/C,cAAc,aAAa,SAAS,CAAC,EAAE,CAAC,GAAG;QAC7C;IACF;IAEA,MAAM,2BAA2B;QAC/B,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,YAAY;YACxD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,IAAI,gBAAgB,YAAY;YAC9B,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,0CAA0C;QAC1C,MAAM,SAAS,oBAAoB,YAAY;QAC/C,MAAM,QAAQ,aAAa,OAAO,CAAC,CAAC,eAAe,EAAE,QAAQ;QAE7D,IAAI,OAAO;YACT,MAAM,aAAa,KAAK,KAAK,CAAC;YAC9B,MAAM,gBAAgB,WAAW,GAAG,CAAC,CAAC;gBACpC,IAAI,MAAM,EAAE,KAAK,oBAAoB,EAAE,EAAE;oBACvC,OAAO;wBACL,GAAG,KAAK;wBACR,WAAW;4BAAC;gCACV,GAAG,MAAM,SAAS,CAAC,EAAE;gCACrB,OAAO;gCACP,KAAK;4BACP;yBAAE;oBACJ;gBACF;gBACA,OAAO;YACT;YAEA,aAAa,OAAO,CAAC,CAAC,eAAe,EAAE,QAAQ,EAAE,KAAK,SAAS,CAAC;YAEhE,qBAAqB;YACrB,qBAAqB,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,QACpC,MAAM,EAAE,KAAK,oBAAoB,EAAE,GAC/B;wBACE,GAAG,KAAK;wBACR,WAAW;4BAAC;gCACV,GAAG,MAAM,SAAS,CAAC,EAAE;gCACrB,OAAO;gCACP,KAAK;4BACP;yBAAE;oBACJ,IACA;YAGN,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd,uBAAuB;YACvB,gBAAgB;YAChB,cAAc;QAChB;IACF;IAEA,MAAM,2BAA2B,CAAC;QAChC,MAAM,SAAS,aAAa,YAAY;QACxC,MAAM,QAAQ,aAAa,OAAO,CAAC,CAAC,eAAe,EAAE,QAAQ;QAE7D,IAAI,OAAO;YACT,MAAM,aAAa,KAAK,KAAK,CAAC;YAC9B,MAAM,gBAAgB,WAAW,MAAM,CAAC,CAAC,QAAwB,MAAM,EAAE,KAAK,aAAa,EAAE;YAE7F,aAAa,OAAO,CAAC,CAAC,eAAe,EAAE,QAAQ,EAAE,KAAK,SAAS,CAAC;YAEhE,qBAAqB;YACrB,qBAAqB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK,aAAa,EAAE;YAE9E,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAChB;IACF;IAEA,IAAI,CAAC,SAAS;QACZ,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAAmC;;;;;;kDACjD,6LAAC;wCAAE,WAAU;kDAAgB;;;;;;;;;;;;0CAE/B,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,SAAS;0CAAU;;;;;;;;;;;;;;;;;;;;;;0BAOnD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,mIAAA,CAAA,OAAI;oBAAC,cAAa;oBAAW,WAAU;;sCACtC,6LAAC,mIAAA,CAAA,WAAQ;;8CACP,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAW;;;;;;8CAC9B,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAW;;;;;;8CAC9B,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAe;;;;;;8CAClC,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAc;;;;;;8CACjC,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAS;;;;;;;;;;;;sCAG9B,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAW,WAAU;;8CAEtC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,mIAAA,CAAA,OAAI;;8DACH,6LAAC,mIAAA,CAAA,aAAU;8DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;;;;;;8DAEb,6LAAC,mIAAA,CAAA,cAAW;8DACV,cAAA,6LAAC;wDAAI,WAAU;kEAAsB,YAAY,MAAM;;;;;;;;;;;;;;;;;sDAI3D,6LAAC,mIAAA,CAAA,OAAI;;8DACH,6LAAC,mIAAA,CAAA,aAAU;8DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;;;;;;8DAEb,6LAAC,mIAAA,CAAA,cAAW;8DACV,cAAA,6LAAC;wDAAI,WAAU;kEACZ,kBAAkB,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM;;;;;;;;;;;;;;;;;sDAK9F,6LAAC,mIAAA,CAAA,OAAI;;8DACH,6LAAC,mIAAA,CAAA,aAAU;8DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;;;;;;8DAEb,6LAAC,mIAAA,CAAA,cAAW;8DACV,cAAA,6LAAC;wDAAI,WAAU;kEAAsB,OAAO,MAAM;;;;;;;;;;;;;;;;;;;;;;;8CAMxD,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAEnB,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC;gDAAI,WAAU;0DACZ,uBAAuB,GAAG,CAAC,CAAC,qBAC3B,6LAAC;wDAAoB,WAAU;;0EAC7B,6LAAC;;kFACC,6LAAC;wEAAG,WAAU;kFAAe,KAAK,IAAI;;;;;;kFACtC,6LAAC;wEAAE,WAAU;;4EACV,KAAK,UAAU;4EAAC;;;;;;;;;;;;;0EAGrB,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;kFAAqC,KAAK,cAAc;;;;;;kFACvE,6LAAC;wEAAE,WAAU;kFAAwB;;;;;;kFACrC,6LAAC;wEAAE,WAAU;;4EAAyB,KAAK,UAAU;4EAAC;;;;;;;;;;;;;;uDAVhD,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAmB7B,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAW,WAAU;sCACtC,cAAA,6LAAC,iJAAA,CAAA,uBAAoB;;;;;;;;;;sCAGvB,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAe,WAAU;;8CAE1C,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;sDACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;0DAAC;;;;;;;;;;;sDAEb,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,oIAAA,CAAA,QAAK;0EAAC;;;;;;0EACP,6LAAC,qIAAA,CAAA,SAAM;gEAAC,OAAO;gEAAc,eAAe;;kFAC1C,6LAAC,qIAAA,CAAA,gBAAa;kFACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;kFAEd,6LAAC,qIAAA,CAAA,gBAAa;;0FACZ,6LAAC,qIAAA,CAAA,aAAU;gFAAC,OAAM;0FAAM;;;;;;4EACvB,OAAO,GAAG,CAAC,CAAC,qBACX,6LAAC,qIAAA,CAAA,aAAU;oFAAY,OAAO;8FAC3B;mFADc;;;;;;;;;;;;;;;;;;;;;;;kEAQzB,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,oIAAA,CAAA,QAAK;0EAAC;;;;;;0EACP,6LAAC,oIAAA,CAAA,QAAK;gEACJ,MAAK;gEACL,OAAO;gEACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQzD,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,kBAAe;;wDACb,4BAA4B,MAAM;wDAAC;;;;;;;;;;;;;sDAGxC,6LAAC,mIAAA,CAAA,cAAW;;8DACV,6LAAC,oIAAA,CAAA,QAAK;;sEACJ,6LAAC,oIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;kFACP,6LAAC,oIAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,6LAAC,oIAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,6LAAC,oIAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,6LAAC,oIAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,6LAAC,oIAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,6LAAC,oIAAA,CAAA,YAAS;kFAAC;;;;;;;;;;;;;;;;;sEAGf,6LAAC,oIAAA,CAAA,YAAS;sEACP,4BAA4B,GAAG,CAAC,CAAC;gEAChC,MAAM,aAAa,kBAAkB,aAAa,YAAY;gEAC9D,qBACE,6LAAC,oIAAA,CAAA,WAAQ;;sFACP,6LAAC,oIAAA,CAAA,YAAS;4EAAC,WAAU;sFAClB,YAAY,QAAQ;;;;;;sFAEvB,6LAAC,oIAAA,CAAA,YAAS;sFAAE,YAAY;;;;;;sFACxB,6LAAC,oIAAA,CAAA,YAAS;sFACP,IAAI,KAAK,aAAa,IAAI,EAAE,kBAAkB;;;;;;sFAEjD,6LAAC,oIAAA,CAAA,YAAS;sFACR,cAAA,6LAAC;gFAAI,WAAU;0FACZ,aAAa,SAAS,CAAC,GAAG,CAAC,CAAC,qBAC3B,6LAAC,oIAAA,CAAA,QAAK;wFAAe,SAAQ;;4FAC1B,KAAK,KAAK;4FAAC;4FAAI,KAAK,GAAG;;uFADd,KAAK,EAAE;;;;;;;;;;;;;;;sFAMzB,6LAAC,oIAAA,CAAA,YAAS;sFACR,cAAA,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAS,aAAa,WAAW,GAAG,YAAY;0FACpD,aAAa,WAAW,GAAG,cAAc;;;;;;;;;;;sFAG9C,6LAAC,oIAAA,CAAA,YAAS;sFACR,cAAA,6LAAC;gFAAI,WAAU;;kGACb,6LAAC,qIAAA,CAAA,SAAM;wFACL,SAAQ;wFACR,MAAK;wFACL,SAAS,IAAM,uBAAuB;kGACvC;;;;;;kGAGD,6LAAC,qIAAA,CAAA,SAAM;wFACL,SAAQ;wFACR,MAAK;wFACL,SAAS,IAAM,yBAAyB;kGACzC;;;;;;;;;;;;;;;;;;mEAnCQ,aAAa,EAAE;;;;;4DA0ClC;;;;;;;;;;;;gDAIH,4BAA4B,MAAM,KAAK,mBACtC,6LAAC;oDAAI,WAAU;8DAAiC;;;;;;;;;;;;;;;;;;;;;;;;sCAQxD,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAc,WAAU;;8CACzC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAwB;;;;;;sDACtC,6LAAC,qIAAA,CAAA,SAAM;4CAAC,MAAM;4CAAoB,cAAc;;8DAC9C,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,OAAO;8DACpB,cAAA,6LAAC,qIAAA,CAAA,SAAM;kEAAC;;;;;;;;;;;8DAEV,6LAAC,qIAAA,CAAA,gBAAa;;sEACZ,6LAAC,qIAAA,CAAA,eAAY;;8EACX,6LAAC,qIAAA,CAAA,cAAW;8EAAC;;;;;;8EACb,6LAAC,qIAAA,CAAA,oBAAiB;8EAAC;;;;;;;;;;;;sEAIrB,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,oIAAA,CAAA,QAAK;sFAAC;;;;;;sFACP,6LAAC,oIAAA,CAAA,QAAK;4EACJ,OAAO;4EACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4EAC9C,aAAY;;;;;;;;;;;;8EAGhB,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,oIAAA,CAAA,QAAK;sFAAC;;;;;;sFACP,6LAAC,oIAAA,CAAA,QAAK;4EACJ,MAAK;4EACL,OAAO;4EACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;4EAC/C,aAAY;;;;;;;;;;;;8EAGhB,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,oIAAA,CAAA,QAAK;sFAAC;;;;;;sFACP,6LAAC,oIAAA,CAAA,QAAK;4EACJ,MAAK;4EACL,OAAO;4EACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;4EAClD,aAAY;;;;;;;;;;;;8EAGhB,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,oIAAA,CAAA,QAAK;sFAAC;;;;;;sFACP,6LAAC,qIAAA,CAAA,SAAM;4EAAC,OAAO;4EAAa,eAAe;;8FACzC,6LAAC,qIAAA,CAAA,gBAAa;8FACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;wFAAC,aAAY;;;;;;;;;;;8FAE3B,6LAAC,qIAAA,CAAA,gBAAa;8FACX,OAAO,GAAG,CAAC,CAAC,qBACX,6LAAC,qIAAA,CAAA,aAAU;4FAAY,OAAO;sGAC3B;2FADc;;;;;;;;;;;;;;;;;;;;;;8EAOzB,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,qIAAA,CAAA,SAAM;4EAAC,SAAS;4EAAqB,WAAU;sFAAS;;;;;;sFAGzD,6LAAC,qIAAA,CAAA,SAAM;4EAAC,SAAQ;4EAAU,SAAS,IAAM,sBAAsB;sFAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CASjF,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAEnB,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;;kEACJ,6LAAC,oIAAA,CAAA,cAAW;kEACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;8EACP,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;;;;;;;;;;;;kEAGf,6LAAC,oIAAA,CAAA,YAAS;kEACP,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC,oIAAA,CAAA,WAAQ;;kFACP,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAe,KAAK,IAAI;;;;;;kFAC7C,6LAAC,oIAAA,CAAA,YAAS;kFAAE,KAAK,KAAK;;;;;;kFACtB,6LAAC,oIAAA,CAAA,YAAS;kFAAE,KAAK,IAAI;;;;;;kFACrB,6LAAC,oIAAA,CAAA,YAAS;kFACR,cAAA,6LAAC,oIAAA,CAAA,QAAK;4EAAC,SAAQ;sFAAY;;;;;;;;;;;kFAE7B,6LAAC,oIAAA,CAAA,YAAS;kFACR,cAAA,6LAAC,qIAAA,CAAA,SAAM;4EACL,SAAQ;4EACR,MAAK;4EACL,SAAS,IAAM,uBAAuB,KAAK,EAAE;sFAC9C;;;;;;;;;;;;+DAZU,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAwBlC,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAS,WAAU;;8CACpC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAwB;;;;;;sDACtC,6LAAC,qIAAA,CAAA,SAAM;4CAAC,MAAM;4CAAc,cAAc;;8DACxC,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,OAAO;8DACpB,cAAA,6LAAC,qIAAA,CAAA,SAAM;kEAAC;;;;;;;;;;;8DAEV,6LAAC,qIAAA,CAAA,gBAAa;;sEACZ,6LAAC,qIAAA,CAAA,eAAY;;8EACX,6LAAC,qIAAA,CAAA,cAAW;8EAAC;;;;;;8EACb,6LAAC,qIAAA,CAAA,oBAAiB;8EAAC;;;;;;;;;;;;sEAIrB,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,oIAAA,CAAA,QAAK;sFAAC;;;;;;sFACP,6LAAC,oIAAA,CAAA,QAAK;4EACJ,OAAO;4EACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4EAC9C,aAAY;;;;;;;;;;;;8EAGhB,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,qIAAA,CAAA,SAAM;4EAAC,SAAS;4EAAe,WAAU;sFAAS;;;;;;sFAGnD,6LAAC,qIAAA,CAAA,SAAM;4EAAC,SAAQ;4EAAU,SAAS,IAAM,gBAAgB;sFAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAS3E,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAEnB,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC;gDAAI,WAAU;0DACZ,OAAO,GAAG,CAAC,CAAC;oDACX,MAAM,YAAY,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,MAAM,MAAM;oDACjE,qBACE,6LAAC;wDAAe,WAAU;;0EACxB,6LAAC;;kFACC,6LAAC;wEAAG,WAAU;kFAAe;;;;;;kFAC7B,6LAAC;wEAAE,WAAU;;4EAAyB;4EAAU;;;;;;;;;;;;;0EAElD,6LAAC,qIAAA,CAAA,SAAM;gEACL,SAAQ;gEACR,MAAK;gEACL,SAAS,IAAM,iBAAiB;gEAChC,UAAU,YAAY;0EACvB;;;;;;;uDAVO;;;;;gDAed;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASZ,6LAAC,qIAAA,CAAA,SAAM;gBAAC,MAAM,CAAC,CAAC;gBAAqB,cAAc,IAAM,uBAAuB;0BAC9E,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;sCACZ,6LAAC,qIAAA,CAAA,eAAY;;8CACX,6LAAC,qIAAA,CAAA,cAAW;8CAAC;;;;;;8CACb,6LAAC,qIAAA,CAAA,oBAAiB;;wCAAC;wCACS,kBAAkB,qBAAqB,gBAAgB,KAAK;;;;;;;;;;;;;sCAG1F,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,oIAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAkB;;;;;;8DACjC,6LAAC,oIAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,OAAO;oDACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sDAGnD,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,oIAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAgB;;;;;;8DAC/B,6LAAC,oIAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,OAAO;oDACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;8CAInD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAS;4CAA0B,WAAU;sDAAS;;;;;;sDAG9D,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,SAAS,IAAM,uBAAuB;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASrF;GArsBgB;KAAA","debugId":null}},
    {"offset": {"line": 4670, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { LoginForm } from '@/components/login-form'\nimport { TechnicianDashboard } from '@/components/technician-dashboard'\nimport { AdminDashboard } from '@/components/admin-dashboard'\nimport { User } from '@/types/user'\n\nexport default function Home() {\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const savedUser = localStorage.getItem('currentUser')\n    if (savedUser) {\n      setUser(JSON.parse(savedUser))\n    }\n    setLoading(false)\n  }, [])\n\n  const handleLogin = (userData: User) => {\n    setUser(userData)\n    localStorage.setItem('currentUser', JSON.stringify(userData))\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    localStorage.removeItem('currentUser')\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900\"></div>\n      </div>\n    )\n  }\n\n  if (!user) {\n    return <LoginForm onLogin={handleLogin} />\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {user.role === 'admin' ? (\n        <AdminDashboard user={user} onLogout={handleLogout} />\n      ) : (\n        <TechnicianDashboard user={user} onLogout={handleLogout} />\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,qCAAqC;YACrC,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,QAAQ,KAAK,KAAK,CAAC;YACrB;YACA,WAAW;QACb;yBAAG,EAAE;IAEL,MAAM,cAAc,CAAC;QACnB,QAAQ;QACR,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;IACrD;IAEA,MAAM,eAAe;QACnB,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,CAAC,MAAM;QACT,qBAAO,6LAAC,sIAAA,CAAA,YAAS;YAAC,SAAS;;;;;;IAC7B;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,KAAK,IAAI,KAAK,wBACb,6LAAC,2IAAA,CAAA,iBAAc;YAAC,MAAM;YAAM,UAAU;;;;;iCAEtC,6LAAC,gJAAA,CAAA,sBAAmB;YAAC,MAAM;YAAM,UAAU;;;;;;;;;;;AAInD;GA5CwB;KAAA","debugId":null}}]
}